name: Docker Publish

on:
  push:
    branches: ['**']
    tags: ['v*.*.*']
  pull_request:
    branches: ['**']

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22' # Based on @tsconfig/node22

      # Add pnpm setup step
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9 # Specify pnpm version from package.json (e.g., 9.14.4 -> 9)

      - name: Install dependencies
        run: pnpm install --frozen-lockfile # Use pnpm and --frozen-lockfile for CI

      - name: Run tests with coverage
        run: pnpm test:unit -- --coverage # Use pnpm and script from package.json

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/ # Default Vitest coverage directory

  build-and-push:
    runs-on: ubuntu-latest
    # If build-and-push should only run after tests pass, uncomment the following line:
    # needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }} # Do not push on PRs
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build-args: | # if you need build arguments
          #   VITE_API_BASE_URL=${{vars.VITE_API_BASE_URL}}
          #   VITE_GA_ID=${{vars.VITE_GA_ID}}
